{"version":3,"sources":["components/Event/index.js","components/EventList/index.js","data/index.js","data/enums.js","components/EventFilters/index.js","components/SearchBar/index.js","App.js","serviceWorker.js","index.js"],"names":["EventCard","styled","a","LabelList","ul","Label","li","Event","name","type","location","url","labels","href","target","sort","prev","next","map","label","key","EventList","events","event","Types","CONFERENCE","HACKATHON","OTHER","Labels","UX","FRONTEND","BACKEND","SOCIAL_AWARENESS","FEMINISM","CLIMATE","HEALTH","PROBLEM_SOLVING","OPEN_SOURCE","Locations","ONLINE","LONDON","SWEDEN","GOTHENBURG","STOCKHOLM","ALMEDALEN","HONGKONG","filterTypes","data","reduce","curr","forEach","add","Set","FilterContainer","div","FilterLabel","Filter","filterType","checked","toggleFilter","onChange","className","EventFilters","filters","setFilters","filter","index","includes","SearchInput","input","SearchBar","value","placeholder","e","App","useState","search","setSearch","some","length","toLocaleLowerCase","toLowerCase","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.741c263e.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst EventCard = styled.a`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 95%;\n  max-width: 60rem;\n  box-sizing: border-box;\n  padding: 1.5rem;\n  text-decoration: none;\n  margin-bottom: 1.5rem;\n  background: white;\n  border: 2px solid #eaeaea;\n  border-radius: 4px;\n`;\n\nconst LabelList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled.li`\n  background: grey;\n  color: antiquewhite;\n  border-radius: 0.5rem;\n  margin: 0.2rem;\n  padding: 0.5rem;\n  white-space: nowrap;\n  font-size: 1.4rem;\n`;\n\nconst Event = ({ name, type, location, url, labels }) => (\n  <EventCard href={url} target=\"_blank\">\n    <h2>{name}</h2>\n    <h3>{location}</h3>\n    <h4>{type}</h4>\n    <LabelList>\n      {labels\n        .sort((prev, next) => (prev < next ? -1 : 1))\n        .map(label => (\n          <Label key={label}>{label}</Label>\n        ))}\n    </LabelList>\n  </EventCard>\n);\n\nexport default Event;\n","import React from \"react\";\n\nimport Event from \"../Event\";\n\nconst EventList = ({ events }) => (\n  <>\n    {events\n      .sort((prev, next) => (prev.name < next.name ? -1 : 1))\n      .map(event => (\n        <Event key={event.name} {...event} />\n      ))}\n  </>\n);\n\nexport default EventList;\n","import enums from \"./enums\";\nconst { Types, Labels, Locations } = enums;\n\nconst events = [\n  {\n    name: \"Gothenburg Startup Hack\",\n    location: Locations.GOTHENBURG,\n    url: \"http://www.gbgstartuphack.com\",\n    type: Types.HACKATHON,\n    labels: [Labels.BACKEND, Labels.FRONTEND, Labels.UX]\n  },\n  {\n    name: \"The UX Conference\",\n    location: Locations.LONDON,\n    url: \"https://theuxconf.com\",\n    type: Types.CONFERENCE,\n    labels: [Labels.UX]\n  },\n  {\n    name: \"#NowWhat Hackathon\",\n    location: Locations.STOCKHOLM,\n    url: \"https://nowwhathacks.confetti.events\",\n    type: Types.HACKATHON,\n    labels: [\n      Labels.BACKEND,\n      Labels.FRONTEND,\n      Labels.UX,\n      Labels.SOCIAL_AWARENESS,\n      Labels.FEMINISM\n    ]\n  },\n  {\n    name: \"Sustainable UX\",\n    location: Locations.ONLINE,\n    url: \"https://sustainableux.com\",\n    type: Types.CONFERENCE,\n    labels: [Labels.UX, Labels.SOCIAL_AWARENESS, Labels.CLIMATE]\n  },\n  {\n    name: \"UX Hong Kong\",\n    location: Locations.HONGKONG,\n    url: \"http://uxhongkong.com\",\n    type: Types.CONFERENCE,\n    labels: [Labels.UX]\n  },\n  {\n    name: \"The Considition\",\n    location: Locations.SWEDEN,\n    url: \"https://theconsidition.se\",\n    type: Types.HACKATHON,\n    labels: [Labels.UX, Labels.BACKEND, Labels.FRONTEND, Labels.SOCIAL_AWARENESS]\n  },\n  {\n    name: \"Hack For Sweden\",\n    location: Locations.ALMEDALEN,\n    url: \"https://hackforsweden.se\",\n    type: Types.HACKATHON,\n    labels: [Labels.UX, Labels.BACKEND, Labels.FRONTEND, Labels.SOCIAL_AWARENESS]\n  },\n  {\n    name: \"Advent of Code\",\n    location: Locations.ONLINE,\n    url: \"https://adventofcode.com\",\n    type: Types.OTHER,\n    labels: [Labels.PROBLEM_SOLVING]\n  },\n  {\n    name: \"Hacktoberfest\",\n    location: Locations.ONLINE,\n    url: \"https://hacktoberfest.digitalocean.com\",\n    type: Types.OTHER,\n    labels: [Labels.PROBLEM_SOLVING, Labels.OPEN_SOURCE]\n  },\n];\n\nexport default events;\n","export const Types = {\n  CONFERENCE: 'Conference',\n  HACKATHON: 'Hackathon',\n  OTHER: 'Other',\n}\n\nexport const Labels = {\n  UX: 'UX',\n  FRONTEND: 'Frontend',\n  BACKEND: 'Backend',\n  SOCIAL_AWARENESS: 'Social awareness',\n  FEMINISM: 'Feminism',\n  CLIMATE: 'Climate',\n  HEALTH: 'Health',\n  PROBLEM_SOLVING: 'Problem Solving',\n  OPEN_SOURCE: 'Open Source'\n}\n\nexport const Locations = {\n  ONLINE: 'Online',\n  LONDON: 'London, UK',\n  SWEDEN: 'Sweden',\n  GOTHENBURG: 'Gothenburg, SE',\n  STOCKHOLM: 'Stockholm, SE',\n  ALMEDALEN: 'Almedalen, SE',\n  HONGKONG: 'Hong Kong, HK'\n}\n\nexport default {\n  Types,\n  Labels,\n  Locations,\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport data from \"../../data\";\n\nconst filterTypes = data.reduce((prev, curr) => {\n  curr.labels.forEach(label => prev.add(label));\n  return prev;\n}, new Set([]));\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 95%;\n  max-width: 60rem;\n  margin-bottom: 1.5rem;\n`\n\nconst EventFilters = ({ filters, setFilters }) => {\n  const toggleFilter = (filterType, checked) => {\n    if (checked) {\n      setFilters(filters.filter(filter => filterType !== filter));\n    } else {\n      setFilters([...filters, filterType]);\n    }\n  };\n  return (\n    <FilterContainer>\n      {[...filterTypes].map((filterType, index) => (\n        <Filter\n          key={index}\n          filterType={filterType}\n          checked={filters.includes(filterType)}\n          toggleFilter={toggleFilter}\n        />\n      ))}\n    </FilterContainer>\n  );\n};\n\nconst FilterLabel = styled.label`\n  font-size: 1.6rem;\n  height: 2.5rem;\n  vertical-align: middle;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: nowrap;\n  margin: 0.5rem;\n  position: relative;\n  padding-left: 3.5rem;\n  margin-bottom: 1.2rem;\n  cursor: pointer;\n  user-select: none;\n  input {\n    margin-right: 0.5rem;\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n    &:checked ~ .checkmark {\n      background-color: #2196F3;\n      &:after {\n        display: block;\n      }\n    }\n  }\n  .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 2.5rem;\n    width: 2.5rem;\n    background-color: #eee;\n    &:after {\n      content: \"\";\n      position: absolute;\n      display: none;\n      left: 0.9rem;\n      top: 0.5rem;\n      width: 0.5rem;\n      height: 1rem;\n      border: solid white;\n      border-width: 0 3px 3px 0;\n      transform: rotate(45deg);\n    }\n  }\n  &:hover input ~ .checkmark {\n    background-color: #ccc;\n  }\n`;\n\nconst Filter = ({ filterType, checked, toggleFilter }) => (\n  <FilterLabel>\n    <input\n      type=\"checkbox\"\n      checked={checked}\n      onChange={() => toggleFilter(filterType, checked)}\n    />\n    {filterType}\n    <span className=\"checkmark\"></span>\n  </FilterLabel>\n);\n\nexport default EventFilters;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchInput = styled.input`\n  box-sizing: border-box;\n  font-size: 2.2rem;\n  background: white;\n  border: 2px solid #eaeaea;\n  outline: none;\n  border-radius: 4px;\n  padding: 1rem 2rem;\n  margin: 1.5rem 0;\n  width: 95%;\n  max-width: 60rem;\n`\n\nconst SearchBar = ({ value, onChange }) => (\n  <SearchInput\n    type=\"text\"\n    value={value}\n    placeholder=\"Search here...\"\n    onChange={e => onChange(e.target.value)}\n  />\n);\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport EventList from \"./components/EventList\";\nimport EventFilters from \"./components/EventFilters\";\nimport SearchBar from \"./components/SearchBar\";\n\nimport data from \"./data\";\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n  const [filters, setFilters] = useState([]);\n\n  const events = data\n    .filter(({ labels }) =>\n      labels.some(label => filters.length === 0 || filters.includes(label))\n    )\n    .filter(\n      ({ name }) =>\n        search.length === 0 ||\n        name.toLocaleLowerCase().includes(search.toLowerCase())\n    );\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Hacker Fun</h1>\n      </header>\n      <SearchBar value={search} onChange={setSearch} />\n      <EventFilters filters={filters} setFilters={setFilters} />\n      <EventList events={events} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}